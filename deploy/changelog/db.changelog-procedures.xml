<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">
<changeSet author="root" id="docreg_generic01" runOnChange="true">
  <createProcedure encoding="utf8"
                   procedureName="docreg_generic"
                   schemaName="global">
CREATE PROCEDURE docreg_generic(reg_doc_type char(50),reg_app_record_id int,reg_jobinfo_id int,reg_app_reference char(100),reg_description char(100))
begin
if (select doc_id from documents where doc_type = reg_doc_type and app_record_id = reg_app_record_id) then
update documents set jobinfo_id = reg_jobinfo_id, app_reference = reg_app_reference, description = reg_description
   where doc_type = reg_doc_type and app_record_id = reg_app_record_id;
else  
insert into documents set doc_type = reg_doc_type, app_record_id = reg_app_record_id, jobinfo_id = reg_jobinfo_id, app_reference = reg_app_reference, description = reg_description;
end if;
end;
  </createProcedure>
</changeSet>
<changeSet author="root" id="docreg_generic201" runOnChange="true">
  <createProcedure encoding="utf8"
                   procedureName="docreg_generic2"
                   schemaName="global">
CREATE PROCEDURE docreg_generic2(reg_doc_type char(50),reg_app_record_id int,reg_jobinfo_id int,reg_app_reference char(100),reg_description char(100),reg_section char(50))
begin
if (select doc_id from documents where doc_type = reg_doc_type and app_record_id = reg_app_record_id) then
update documents set jobinfo_id = reg_jobinfo_id, app_reference = reg_app_reference, description = reg_description, section = reg_section
   where doc_type = reg_doc_type and app_record_id = reg_app_record_id;
else
insert into documents set doc_type = reg_doc_type, app_record_id = reg_app_record_id, jobinfo_id = reg_jobinfo_id, app_reference = reg_app_reference, description = reg_description, section = reg_section ;
end if;
end;
  </createProcedure>
</changeSet>
<changeSet author="root" id="docunreg01" runOnChange="true">
  <createProcedure encoding="utf8"
                   procedureName="docunreg"
                   schemaName="global">
CREATE PROCEDURE docunreg(unreg_doc_type char(50), unreg_app_record_id int)
begin
delete from documents where doc_type = unreg_doc_type and app_record_id = unreg_app_record_id;
end;
  </createProcedure>
</changeSet>
<changeSet author="root" id="doc_link01" runOnChange="true">
  <createProcedure encoding="utf8"
                   procedureName="doc_link"
                   schemaName="global">
CREATE PROCEDURE doc_link(doc1 int,doc2 int, userid int, link_description char(30))
begin
delete from documents_links where doca = doc1 and docb = doc2;
delete from documents_links where doca = doc2 and docb = doc1;
insert into documents_links set doca = doc1, docb = doc2, creator = userid, description = link_description;
insert into documents_links set doca = doc2, docb = doc1, creator = userid, description = link_description;
end;
  </createProcedure>
</changeSet>
<changeSet author="root" id="doc_link_delete01" runOnChange="true">
  <createProcedure encoding="utf8"
                   procedureName="doc_link_delete"
                   schemaName="global">
CREATE PROCEDURE doc_link_delete(doc1 int,doc2 int)
begin
if ((select documents_links.link_id from documents_links right join webfile_groups_and_files on ( documents_links.file_group_id = webfile_groups_and_files.file_group_id) where (doca = doc1 and docb = doc2) or (docb = doc1 and doca = doc2) limit 1) is null) then
delete from documents_links where doca = doc1 and docb = doc2;
delete from documents_links where doca = doc2 and docb = doc1;
end if;
end;
  </createProcedure>
</changeSet>
</databaseChangeLog>
