/* This rule resets a core set of elements so that they will appear consistent across browsers. Without this rule, content styled with an h1 tag, for example, would appear in different places in Firefox and Internet Explorer because each browser has a different top margin default value. By resetting these values to 0, the elements will initially be rendered in an identical fashion and their properties can be easily defined by the designer in any subsequent rule. */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6 {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
}
/* The body is the outermost layout component and contains the visible page content. Setting properties for the body element will help to create consistent styling of the page content and more manageable CSS. Besides using the body element to set global properties, it is common to use the body element to set the background color of the page and create a centered container for the page content to display. */
body {
  background-color: #343446;
  color: #2c2d2e;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 11px;
  line-height: 14px;
  margin: 0 0 0 0; /* Sets the margin properties for an element using shorthand notation (top, right, bottom, left) */
  padding: 0 0 0 0; /* Sets the padding properties for an element using shorthand notation (top, right, bottom, left) */
  text-align: center; /* Centers the page content container in IE 5 browsers. */
}
/* Commonly used to style page titles. */
h1 {
  color: #777890;
  font-size: 14px;
  font-weight: bold;
  line-height: 14px;
}
/* Commonly used to style section titles. */
h2 {
  color: #777890;
  font-size: 12px;
  font-weight: bold;
  line-height: 14px;
}
/* Sets the style for unvisited links. */
a,  a:link {
  color: #5456ef;
  font-weight: bold;
  text-decoration: none;
}
/* Sets the style for visited links. */
a:visited {
  color: #50516b;
  font-weight: bold;
  text-decoration: none;
}
/* Sets the style for links on mouseover. */
a:hover {
  color: #3a32c4;
  text-decoration: underline;
}
/* Sets the style for a link that has focus. */
a:focus {
  color: #3a32c4;
}
/* Sets the style for a link that is being activated/clicked. */
a:active {
  color: #383644;
}
/* This is a container for the page content. It is common to use the container to constrain the width of the page content and allow for browser chrome to avoid the need for horizontal scrolling. For fixed layouts you may specify a container width and use auto for the left and right margin to center the container on the page. IE 5 browser require the use of text-align: center defined by the body element to center the container. For liquid layouts you may simply set the left and right margins to center the container on the page. */
#outerWrapper {
  background-color: #fff;
  margin-bottom: 0;
  margin-left: auto;
  margin-right: auto;
  padding: 0px 0px 0px 0px; /* Sets the padding properties for an element using shorthand notation (top, right, bottom, left) */
  text-align: left; /* Redefines the text alignment defined by the body element. */
  width: 70em;
}
#outerWrapper #header {
  background-color: #9ea3aa;
  border-bottom: solid 1px #767a7f; /* Sets the bottom border properties for an element using shorthand notation */
  font-size: 18px;
  font-weight: bold;
  height: 150px;
  line-height: 15px;
  padding: 0px 0px 0px 0px; /* Sets the padding properties for an element using shorthand notation (top, right, bottom, left) */
}
#outerWrapper #topNavigation {
  background-color: #f4f2fc;
  border-bottom: solid 1px #9ea3aa; /* Sets the bottom border properties for an element using shorthand notation */
  height: 25px;
  padding: 10px 10px 10px 10px; /* Sets the padding properties for an element using shorthand notation (top, right, bottom, left) */
}
#outerWrapper #contentWrapper #rightColumn1 {
  background-color: #f4f2fc;
  border-left: solid 1px #9ea3aa; /* Sets the left border properties for an element using shorthand notation */
  float: right;
  padding: 10px 10px 10px 10px; /* Sets the padding properties for an element using shorthand notation (top, right, bottom, left) */
  width: 14em;
}
#outerWrapper #contentWrapper #leftColumn1 {
  background-color: #f4f2fc;
  border-right: solid 1px #9ea3aa; /* Sets the right border properties for an element using shorthand notation */
  float: left;
  padding: 10px 10px 20px 10px; /* Sets the padding properties for an element using shorthand notation (top, right, bottom, left) */
  width: 14em;
}
/* Contains the main page content. When using a mutliple column layout the margins will be set to account for the floated columns' width, margins, and padding. */
#outerWrapper #contentWrapper #content {
  margin: 0 16em 0 16em; /* Sets the margin properties for an element using shorthand notation (top, right, bottom, left) */
  padding: 10px 10px 10px 10px; /* Sets the padding properties for an element using shorthand notation (top, right, bottom, left) */
}
/* Using floated elements and a clear float class is a common method to accomplish multiple column tableless layouts. If floated elements are used without being cleared the elements following will wrap around the floated element. This class should be applied to an element after the last floated element and before the close of the container with floated elements. */
#outerWrapper #contentWrapper .clearFloat {
  clear: both;
  display: block;
}
#outerWrapper #footer {
  background-color: #f4f2fc;
  border-top: solid 1px #9ea3aa; /* Sets the top border properties for an element using shorthand notation */
  padding: 10px 10px 10px 10px; /* Sets the padding properties for an element using shorthand notation (top, right, bottom, left) */
}
